{"version":3,"sources":["components/Button.jsx","components/ButtonPad.jsx","components/Display.jsx","App.jsx","index.jsx"],"names":["Button","props","useState","active","setActive","handlePressed","event","code","handler","type","text","useEffect","window","addEventListener","removeEventListener","className","style","id","onClick","buttonObj","btnId","btnCode","ButtonPad","map","btn","Display","history","operator","display","INIT","App","operand1","setOperand1","operand2","setOperand2","undefined","setOperator","displayingResults","setDisplayingResults","total","useRef","handleOperator","ops","calculate","current","getOperand","result","value1","parseFloat","value2","currentDigit","includes","getDisplayNumber","number","integerDisplay","stringNumber","toString","integerDigits","split","decimalDigits","isNaN","toLocaleString","maximumFractionDigits","href","rel","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8910ecf3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Button(props) {\r\n  const [active, setActive] = useState(false);\r\n  const handlePressed = (event) => {\r\n    if (event.code === props.code) {\r\n      props.handler(props.type, props.text);\r\n      setActive(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handlePressed);\r\n    window.addEventListener(\"keyup\", () => setActive(false));\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handlePressed);\r\n      window.removeEventListener(\"keyup\", () => setActive(false));\r\n    };\r\n  });\r\n  return (\r\n    <>\r\n      <button\r\n        key={props.id}\r\n        className={active ? props.style + \" active\" : props.style}\r\n        id={props.id}\r\n        onClick={() => props.handler(props.type, props.text)}>\r\n        {props.text}\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst buttonObj = [\r\n  {\r\n    btnId: \"clear\",\r\n    style: \"button\",\r\n    text: \"AC\",\r\n    type: \"clear\",\r\n    btnCode: \"NumLock\",\r\n  },\r\n  {\r\n    btnId: \"divide\",\r\n    style: \"button\",\r\n    text: \"รท\",\r\n    type: \"operator\",\r\n    btnCode: \"NumpadDivide\",\r\n  },\r\n  {\r\n    btnId: \"multiply\",\r\n    style: \"button\",\r\n    text: \"x\",\r\n    type: \"operator\",\r\n    btnCode: \"NumpadMultiply\",\r\n  },\r\n  {\r\n    btnId: \"subtract\",\r\n    style: \"button\",\r\n    text: \"-\",\r\n    type: \"operator\",\r\n    btnCode: \"NumpadSubtract\",\r\n  },\r\n  {\r\n    btnId: \"seven\",\r\n    style: \"button\",\r\n    text: \"7\",\r\n    type: \"digit\",\r\n    btnCode: \"Numpad7\",\r\n  },\r\n  {\r\n    btnId: \"eight\",\r\n    style: \"button\",\r\n    text: \"8\",\r\n    type: \"digit\",\r\n    btnCode: \"Numpad8\",\r\n  },\r\n  {\r\n    btnId: \"nine\",\r\n    style: \"button\",\r\n    text: \"9\",\r\n    type: \"digit\",\r\n    btnCode: \"Numpad9\",\r\n  },\r\n  {\r\n    btnId: \"add\",\r\n    style: \"button height-two\",\r\n    text: \"+\",\r\n    type: \"operator\",\r\n    btnCode: \"NumpadAdd\",\r\n  },\r\n  {\r\n    btnId: \"four\",\r\n    style: \"button\",\r\n    text: \"4\",\r\n    type: \"digit\",\r\n    btnCode: \"Numpad4\",\r\n  },\r\n  {\r\n    btnId: \"five\",\r\n    style: \"button\",\r\n    text: \"5\",\r\n    type: \"digit\",\r\n    btnCode: \"Numpad5\",\r\n  },\r\n  {\r\n    btnId: \"six\",\r\n    style: \"button\",\r\n    text: \"6\",\r\n    type: \"digit\",\r\n    btnCode: \"Numpad6\",\r\n  },\r\n  {\r\n    btnId: \"one\",\r\n    style: \"button\",\r\n    text: \"1\",\r\n    type: \"digit\",\r\n    btnCode: \"Numpad1\",\r\n  },\r\n  {\r\n    btnId: \"two\",\r\n    style: \"button\",\r\n    text: \"2\",\r\n    type: \"digit\",\r\n    btnCode: \"Numpad2\",\r\n  },\r\n  {\r\n    btnId: \"three\",\r\n    style: \"button\",\r\n    text: \"3\",\r\n    type: \"digit\",\r\n    btnCode: \"Numpad3\",\r\n  },\r\n  {\r\n    btnId: \"equals\",\r\n    style: \"button height-two\",\r\n    text: \"=\",\r\n    type: \"equals\",\r\n    btnCode: \"NumpadEnter\",\r\n  },\r\n  {\r\n    btnId: \"zero\",\r\n    style: \"button span-two\",\r\n    text: \"0\",\r\n    type: \"digit\",\r\n    btnCode: \"Numpad0\",\r\n  },\r\n  {\r\n    btnId: \"decimal\",\r\n    style: \"button\",\r\n    text: \".\",\r\n    type: \"digit\",\r\n    btnCode: \"NumpadDecimal\",\r\n  },\r\n];\r\n\r\nfunction ButtonPad(props) {\r\n  return (\r\n    <div className='button-wrapper'>\r\n      {buttonObj.map((btn) => {\r\n        return (\r\n          <Button\r\n            key={btn.btnId}\r\n            style={btn.style}\r\n            id={btn.btnId}\r\n            type={btn.type}\r\n            text={btn.text}\r\n            code={btn.btnCode}\r\n            handler={props.handler}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonPad;\r\n","import React from \"react\";\r\n\r\nfunction Display(props) {\r\n  return (\r\n    <>\r\n      <div className='display-wrapper'>\r\n        <p className='history'>\r\n          {props.history} {props.operator}\r\n        </p>\r\n        <p className='display' id='display'>\r\n          {props.display}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","import React, { useState, useRef } from \"react\";\r\nimport \"./App.scss\";\r\nimport ButtonPad from \"./components/ButtonPad\";\r\nimport Display from \"./components/Display\";\r\n\r\n/* \r\n\r\nAdapted some code and functions from WebDev Simplified's Javascript Calculator\r\nhttps://github.com/WebDevSimplified/Vanilla-JavaScript-Calculator/blob/master/script.js\r\n(Also fixed some of it's issues such as divide by zero and not resetting the input if a current result is being viewed)\r\n\r\n*/\r\n\r\nconst INIT = \"0\";\r\n\r\nfunction App() {\r\n  // const [display, setDisplay] = useState(INIT);\r\n  // const [history, setHistory] = useState(INIT);\r\n  // const [displayOperator, setDisplayOperator] = useState(undefined);\r\n  const [operand1, setOperand1] = useState(INIT);\r\n  const [operand2, setOperand2] = useState(INIT);\r\n  const [operator, setOperator] = useState(undefined);\r\n  const [displayingResults, setDisplayingResults] = useState(false);\r\n  const total = useRef(0);\r\n\r\n  const handleClick = (type, text) => {\r\n    switch (type) {\r\n      case \"clear\":\r\n        // setHistory(INIT);\r\n        // setDisplay(INIT);\r\n        setOperand1(INIT);\r\n        setOperand2(INIT);\r\n        setOperator(undefined);\r\n        total.current = 0;\r\n        // setDisplayOperator(undefined);\r\n        return;\r\n      case \"digit\":\r\n        getOperand(text);\r\n        return;\r\n      case \"equals\":\r\n        calculate();\r\n        if (operator !== undefined) {\r\n          setDisplayingResults(true);\r\n        }\r\n        total.current = 0;\r\n        return;\r\n      case \"operator\":\r\n        handleOperator(text);\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleOperator = (ops) => {\r\n    if (ops === \"-\" && operand2 === INIT) {\r\n      getOperand(ops);\r\n      return;\r\n    }\r\n    if (ops !== \"-\" && operand2 === \"-\") {\r\n      setOperand2(INIT);\r\n    }\r\n    if (operator !== undefined) {\r\n      setOperator(ops);\r\n    }\r\n    if (operand2 === INIT || operand2 === \"-\") return;\r\n    if (operand1 !== INIT) {\r\n      calculate();\r\n    }\r\n    setOperator(ops);\r\n    if (total.current === 0) {\r\n      setOperand1(operand2);\r\n    } else {\r\n      setOperand1(total.current);\r\n    }\r\n    setOperand2(INIT);\r\n  };\r\n\r\n  const calculate = () => {\r\n    let result = 0;\r\n    const value1 = parseFloat(operand1);\r\n    const value2 = parseFloat(operand2);\r\n    if (operand2 === \"0\" || operand1 === \"0\") return;\r\n    switch (operator) {\r\n      case \"+\":\r\n        result = value1 + value2;\r\n        break;\r\n      case \"-\":\r\n        result = value1 - value2;\r\n        break;\r\n      case \"รท\":\r\n        result = value1 / value2;\r\n        break;\r\n      case \"x\":\r\n        result = value1 * value2;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    total.current = result;\r\n    setOperand2(total.current);\r\n    setOperator(undefined);\r\n    setOperand1(INIT);\r\n  };\r\n\r\n  const getOperand = (currentDigit) => {\r\n    if (displayingResults === true) {\r\n      setOperand2(currentDigit);\r\n      setDisplayingResults(false);\r\n      return;\r\n    }\r\n\r\n    if (currentDigit === \".\" && operand2.includes(\".\")) {\r\n      return;\r\n    } else if (currentDigit === \"0\" && operand2 === \"0\") {\r\n      return;\r\n    } else if (currentDigit !== \"0\" && operand2 === \"0\") {\r\n      setOperand2(currentDigit);\r\n      return;\r\n    }\r\n\r\n    setOperand2(operand2 + currentDigit);\r\n  };\r\n\r\n  const getDisplayNumber = (number) => {\r\n    if (number === \"-\") {\r\n      return number;\r\n    }\r\n    const stringNumber = number.toString();\r\n    const integerDigits = parseFloat(stringNumber.split(\".\")[0]);\r\n    const decimalDigits = stringNumber.split(\".\")[1];\r\n    let integerDisplay;\r\n    if (isNaN(integerDigits)) {\r\n      integerDisplay = \"\";\r\n    } else {\r\n      integerDisplay = integerDigits.toLocaleString(\"en\", {\r\n        maximumFractionDigits: 0,\r\n      });\r\n    }\r\n    if (decimalDigits != null) {\r\n      return `${integerDisplay}.${decimalDigits}`;\r\n    } else {\r\n      return integerDisplay;\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const updateDisplay = () => {\r\n  //     setDisplay(getDisplayNumber(operand2));\r\n  //     if (operator !== null) {\r\n  //       setHistory(getDisplayNumber(operand1));\r\n  //       setDisplayOperator(operator);\r\n  //     } else {\r\n  //       setHistory(INIT);\r\n  //     }\r\n  //   };\r\n  //   updateDisplay();\r\n  // }, [operand1, operand2, operator]);\r\n\r\n  return (\r\n    <>\r\n      <div className='app'>\r\n        <Display\r\n          display={getDisplayNumber(operand2)}\r\n          history={getDisplayNumber(operand1)}\r\n          operator={operator}\r\n        />\r\n        <ButtonPad handler={handleClick} />\r\n      </div>\r\n      <p>\r\n        Coded by{\" \"}\r\n        <a href='https://www.joeldoctor.com' rel='noreferrer' target='_blank'>\r\n          Joel P. Doctor\r\n        </a>\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <main className='main'>\n    <App />\n  </main>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}